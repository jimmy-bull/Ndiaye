{"version":3,"sources":["../../src/utils/directionForPassDefault.js"],"names":["directionForPassDefault","NORM","Math","sqrt","p","factor","total","f","ceil"],"mappings":"oFAEwBA,uB,CAFxB,GAAMC,MAAOC,KAAKC,IAAL,CAAU,CAAV,EAAe,CAA5B,CAEe,QAASH,wBAAT,CAAiCI,CAAjC,CAAoCC,CAApC,CAA4CC,CAA5C,CAAmD,CAChE,GAAMC,GAAa,CAAT,GAAaL,KAAKM,IAAL,CAAUJ,EAAI,CAAd,CAAb,CAAgCE,CAA1C,CACA,OAAQ,CAACF,EAAI,CAAL,EAAU,CAAlB,EACE,IAAK,EAAL,CACE,MAAO,CAACG,CAAD,CAAI,CAAJ,CAAP,CACF,IAAK,EAAL,CACE,MAAO,CAAC,CAAD,CAAIA,CAAJ,CAAP,CACF,IAAK,EAAL,CACE,MAAO,CAACA,EAAIN,IAAL,CAAWM,EAAIN,IAAf,CAAP,CACF,IAAK,EAAL,CACE,MAAO,CAACM,EAAIN,IAAL,CAAW,CAACM,CAAD,CAAKN,IAAhB,CAAP,CARJ,CAUD","file":"directionForPassDefault.js","sourcesContent":["const NORM = Math.sqrt(2) / 2;\n\nexport default function directionForPassDefault(p, factor, total) {\n  const f = factor * 2 * Math.ceil(p / 2) / total;\n  switch ((p - 1) % 4) {\n    case 0:\n      return [f, 0];\n    case 1:\n      return [0, f];\n    case 2:\n      return [f * NORM, f * NORM];\n    case 3:\n      return [f * NORM, -f * NORM];\n  }\n}\n"]}